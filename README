Members: Cody Morgan, Andrew Levandowski
Accounts: cssc1211 (location of assignment), cssc1214
Class: CS 570, Summer 2018
Assignment: Assignment 3, Multi-Processing Timer
Filename: README

File Manifest: 
	driver.cpp - Contains main function
	Timer.cpp - contains different timing functions (child processes)
	Timer.hpp - header file
	Makefile
    README

To compile/build, execute command below (on Linux/Edoras console):
make build

To execute:
tevent
or
tevent <seconds>

To clean and delete the executable, <tevent>, execute:
make clean

The program handles the possible input arguments in the driver file and then calls the Timer file which has the functions for child management, which control wall clock and count down, along with some helper functions. If a 2nd argument is provided after the tevent executable, that is the time that is used for the timer instead of the default 25 seconds. Once the count down is done, wall clock stops printing the time and both threads are ended with appropriate messages printed. During this assignment, we gained more experience with managing multiple threads.
